#!/usr/bin/env bash
# $Id$
#
# Debian Packaging Scripts
# Copyright (C) 2002-2021 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: thomas.dreibholz@gmail.com

LIBRARY_PACKAGES="libsctpsocket2"


find debian/ -maxdepth 1 -name "*.symbols" | xargs --no-run-if-empty rm -f

echo ""
echo "Creating binary package ..."
echo ""

./bootstrap && debuild -i -us -uc -b || exit 1


for LIBRARY_PACKAGE in $LIBRARY_PACKAGES ; do
   echo ""
   echo "###### Creating symbols for library package $LIBRARY_PACKAGE ... ######"
   echo ""

   # Symbol file generation according How-To at:
   # http://swik.net/Ubuntu/Planet+Ubuntu/Dmitrijs+Ledkovs%3A+Lintian+no-symbols-control-file/d4q9h

   find . -maxdepth 1 -name "$LIBRARY_PACKAGE.new_symbol_file" | xargs --no-run-if-empty rm -f
   find . -maxdepth 1 -name "dpkg-gensymbols*" | xargs --no-run-if-empty rm -f
   find . -maxdepth 1 -name "symbols-*.patch" | xargs --no-run-if-empty rm -f

   echo "--> dpkg-gensymbols -p$LIBRARY_PACKAGE -Pdebian/$LIBRARY_PACKAGE"
   touch debian/$LIBRARY_PACKAGE.symbols
   dpkg-gensymbols -p$LIBRARY_PACKAGE -Pdebian/$LIBRARY_PACKAGE >symbols-$LIBRARY_PACKAGE.patch

   echo "--> patch -p0 --output=$LIBRARY_PACKAGE.new_symbol_file <symbols-$LIBRARY_PACKAGE.patch"
   patch -p0 --output=$LIBRARY_PACKAGE.new_symbol_file <symbols-$LIBRARY_PACKAGE.patch

   # Replace C++ symbols which are different on 32- and 64-bit systems
   if [ -e "$LIBRARY_PACKAGE.new_symbol_file" ] ; then
      echo "--> ./replace-cpp-symbols <$LIBRARY_PACKAGE.new_symbol_file >debian/$LIBRARY_PACKAGE.symbols"
      ./replace-cpp-symbols <$LIBRARY_PACKAGE.new_symbol_file >debian/$LIBRARY_PACKAGE.symbols || exit 1
   else
      echo "ERROR: patch has not created output file $LIBRARY_PACKAGE.new_symbol_file!"
   fi

   # Strip off ubuntu version!
   perl -pi -e 's/-\d.*//' debian/$LIBRARY_PACKAGE.symbols || exit 1
done

echo ""
echo "Done."
